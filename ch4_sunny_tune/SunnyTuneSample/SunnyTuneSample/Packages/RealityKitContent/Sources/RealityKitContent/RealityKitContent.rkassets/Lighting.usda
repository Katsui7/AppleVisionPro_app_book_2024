#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Sphere/DefaultMaterial>
        double radius = 0.1

        def Material "DefaultMaterial"
        {
            reorder nameChildren = ["DefaultSurfaceShader", "UnlitSurface", "Normal", "DotProduct", "Max", "Color", "Ambient", "Add", "Multiply", "Multiply_1", "Add_1", "Specular"]
            color3f inputs:LightColor = (0.823849, 0.43718717, 0.0827559) (
                colorSpace = "lin_srgb"
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (25.42894, 77.5808)
                        float2 sizeInSubgraph = (133, 53)
                        int stackingOrderInSubgraph = 2646
                    }
                }
            )
            float3 inputs:LightDirection = (0.5, -0.5, 0) (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-700.96094, 457.2413)
                        float2 sizeInSubgraph = (156, 53)
                        int stackingOrderInSubgraph = 2031
                    }
                }
            )
            float inputs:Wet = 1 (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-41.981316, 476.7646)
                        float2 sizeInSubgraph = (98, 53)
                        int stackingOrderInSubgraph = 2648
                    }
                }
            )
            token outputs:mtlx:surface.connect = </Root/Sphere/DefaultMaterial/UnlitSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:mtlx:surface"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (558.51404, 161.7648)
            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 2646

            def Shader "DefaultSurfaceShader" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }

            def Shader "UnlitSurface"
            {
                uniform token info:id = "ND_realitykit_unlit_surfaceshader"
                bool inputs:applyPostProcessToneMap
                color3f inputs:color.connect = </Root/Sphere/DefaultMaterial/Multiply_2.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:opacity
                float inputs:opacityThreshold
                token outputs:out
                float2 ui:nodegraph:node:pos = (344.93073, 108.47092)
                float2 ui:nodegraph:node:size = (194.5, 181)
                int ui:nodegraph:node:stackingOrder = 2646
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:hasPremultipliedAlpha"]
            }

            def Shader "DotProduct"
            {
                uniform token info:id = "ND_dotproduct_vector3"
                float3 inputs:in1.connect = </Root/Sphere/DefaultMaterial/NormalMap.outputs:out>
                float3 inputs:in2.connect = </Root/Sphere/DefaultMaterial/Multiply_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-319.06686, 316.17517)
                float2 ui:nodegraph:node:size = (153.5, 53)
                int ui:nodegraph:node:stackingOrder = 1995
            }

            def Shader "Max"
            {
                uniform token info:id = "ND_max_float"
                float inputs:in1.connect = </Root/Sphere/DefaultMaterial/DotProduct.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-157.60689, 324.67645)
                float2 ui:nodegraph:node:size = (113, 40)
                int ui:nodegraph:node:stackingOrder = 1995
            }

            def Shader "Color"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (1, 1, 1) (
                    colorSpace = "lin_srgb"
                )
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-74.44188, 182.35876)
                float2 ui:nodegraph:node:size = (151, 53)
                int ui:nodegraph:node:stackingOrder = 2647
            }

            def Shader "Ambient"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.14040266, 0.12799, 0.5003696) (
                    colorSpace = "lin_srgb"
                )
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-178.89825, 250.41898)
                float2 ui:nodegraph:node:size = (151, 53)
                int ui:nodegraph:node:stackingOrder = 1995
            }

            def Shader "Add"
            {
                uniform token info:id = "ND_add_color3FA"
                color3f inputs:in1.connect = </Root/Sphere/DefaultMaterial/Ambient.outputs:out>
                prepend float inputs:in2.connect = </Root/Sphere/DefaultMaterial/Max.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-30.047348, 313.83533)
                float2 ui:nodegraph:node:size = (61.5, 36.5)
                int ui:nodegraph:node:stackingOrder = 1995
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_color3"
                prepend color3f inputs:in1.connect = </Root/Sphere/DefaultMaterial/Color.outputs:out>
                color3f inputs:in2.connect = </Root/Sphere/DefaultMaterial/Add.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (77.10127, 190.9447)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 2498
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_vector3FA"
                float3 inputs:in1.connect = </Root/Sphere/DefaultMaterial.inputs:LightDirection>
                float inputs:in2 = -1
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-498.73126, 389.57816)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 2026
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "outputs:out"]
            }

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_color3FA"
                prepend color3f inputs:in1.connect = </Root/Sphere/DefaultMaterial/Multiply.outputs:out>
                float inputs:in2.connect = </Root/Sphere/DefaultMaterial/Multiply_3.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (190.20952, 273.44086)
                float2 ui:nodegraph:node:size = (61.5, 36.5)
                int ui:nodegraph:node:stackingOrder = 2553
            }

            def NodeGraph "Specular"
            {
                float3 inputs:LightDirection (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (-130.54996, 7.4464855)
                            float2 sizeInSubgraph = (156, 53)
                            int stackingOrderInSubgraph = 1677
                        }
                    }
                )
                float3 inputs:LightDirection.connect = </Root/Sphere/DefaultMaterial.inputs:LightDirection>
                float3 inputs:Normal (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (-120.14542, 82.61644)
                            float2 sizeInSubgraph = (139, 53)
                            int stackingOrderInSubgraph = 1679
                        }
                    }
                )
                float3 inputs:Normal.connect = </Root/Sphere/DefaultMaterial/NormalMap.outputs:out>
                prepend float outputs:Power_out.connect = </Root/Sphere/DefaultMaterial/Specular/Power.outputs:out>
                float2 ui:nodegraph:node:pos = (-335.20694, 446.43298)
                float2 ui:nodegraph:node:size = (125, 127)
                int ui:nodegraph:node:stackingOrder = 2032
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:Power_out", "inputs:Normal", "inputs:LightDirection", "inputs:LightDirection"]
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1008.59766, -46.140625)
                float2 ui:nodegraph:realitykit:subgraphOutputs:size = (149.48557, 81)
                int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1477

                def Shader "Power"
                {
                    uniform token info:id = "ND_power_float"
                    float inputs:in1.connect = </Root/Sphere/DefaultMaterial/Specular/Max.outputs:out>
                    float inputs:in2.connect = </Root/Sphere/DefaultMaterial/Specular/Shineness.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (848.0781, -19.949219)
                    float2 ui:nodegraph:node:size = (123.5, 40)
                    int ui:nodegraph:node:stackingOrder = 1465
                }

                def Shader "Shineness"
                {
                    uniform token info:id = "ND_constant_float"
                    float inputs:value = 32
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (675.4375, 43.835938)
                    float2 ui:nodegraph:node:size = (149, 53)
                    int ui:nodegraph:node:stackingOrder = 1473
                }

                def Shader "ViewDirection"
                {
                    uniform token info:id = "ND_realitykit_viewdirection_vector3"
                    string inputs:space
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (292.17633, -45.42578)
                    float2 ui:nodegraph:node:size = (210, 53)
                    int ui:nodegraph:node:stackingOrder = 1688
                }

                def Shader "DotProduct"
                {
                    uniform token info:id = "ND_dotproduct_vector3"
                    float3 inputs:in1.connect = </Root/Sphere/DefaultMaterial/Specular/ViewDirection.outputs:out>
                    float3 inputs:in2.connect = </Root/Sphere/DefaultMaterial/Specular/Normalize.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (521.1211, -35.42578)
                    float2 ui:nodegraph:node:size = (153.5, 53)
                    int ui:nodegraph:node:stackingOrder = 1469
                }

                def Shader "Max"
                {
                    uniform token info:id = "ND_max_float"
                    float inputs:in1.connect = </Root/Sphere/DefaultMaterial/Specular/DotProduct.outputs:out>
                    float inputs:in2 = 0
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (690.4258, -28.253906)
                    float2 ui:nodegraph:node:size = (113, 40)
                    int ui:nodegraph:node:stackingOrder = 1683
                    string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2"]
                }

                def Shader "Reflect"
                {
                    uniform token info:id = "ND_realitykit_reflect_vector3"
                    float3 inputs:in.connect = </Root/Sphere/DefaultMaterial/Specular.inputs:LightDirection>
                    float3 inputs:normal.connect = </Root/Sphere/DefaultMaterial/Specular.inputs:Normal>
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (98.12085, 5.085449)
                    float2 ui:nodegraph:node:size = (140.5, 127)
                    int ui:nodegraph:node:stackingOrder = 1671
                }

                def Shader "Normalize"
                {
                    uniform token info:id = "ND_normalize_vector3"
                    float3 inputs:in.connect = </Root/Sphere/DefaultMaterial/Specular/Reflect.outputs:out>
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (317.5664, 50.15625)
                    float2 ui:nodegraph:node:size = (149, 40)
                    int ui:nodegraph:node:stackingOrder = 1691
                }
            }

            def Shader "NormalMap"
            {
                uniform token info:id = "ND_normalmap"
                float3 inputs:in.connect = </Root/Sphere/DefaultMaterial/Image.outputs:out>
                float3 inputs:normal.connect = </Root/Sphere/DefaultMaterial/Normal.outputs:out>
                float inputs:scale
                string inputs:space = "tangent"
                float3 inputs:tangent.connect = </Root/Sphere/DefaultMaterial/Tangent.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-523.4428, 236.46361)
                float2 ui:nodegraph:node:size = (124, 181)
                int ui:nodegraph:node:stackingOrder = 2010
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:tangent", "inputs:tangent", "inputs:tangent", "inputs:normal", "inputs:scale"]
            }

            def Shader "Image"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @Textures/ground_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-712.8811, 132.9421)
                float2 ui:nodegraph:node:size = (148.5, 199)
                int ui:nodegraph:node:stackingOrder = 1708
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:vaddressmode"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_normal_vector3"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-703.42114, 270.33713)
                float2 ui:nodegraph:node:size = (128.5, 40)
                int ui:nodegraph:node:stackingOrder = 1756
            }

            def Shader "Tangent"
            {
                uniform token info:id = "ND_tangent_vector3"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-710.885, 319.0857)
                float2 ui:nodegraph:node:size = (136.5, 40)
                int ui:nodegraph:node:stackingOrder = 1756
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_color3"
                color3f inputs:in1.connect = </Root/Sphere/DefaultMaterial.inputs:LightColor>
                color3f inputs:in2.connect = </Root/Sphere/DefaultMaterial/Add_1.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (182.76346, 86.18924)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 2646
            }

            def Shader "Multiply_3"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/Sphere/DefaultMaterial/Specular.outputs:Power_out>
                float inputs:in2.connect = </Root/Sphere/DefaultMaterial.inputs:Wet>
                float outputs:out
                float2 ui:nodegraph:node:pos = (75.82323, 376.10202)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 2443
            }
        }
    }
}

