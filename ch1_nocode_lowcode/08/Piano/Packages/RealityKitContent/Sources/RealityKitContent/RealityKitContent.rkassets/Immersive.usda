#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["LeftThumbTip", "LeftIndexFingetTip", "LeftMiddleFingetTip", "LeftRingFingetTip", "LeftLittleFingetTip", "RightThumbTip", "RightIndexFingetTip", "RightMiddleFingetTip", "RightRingFingetTip", "RightLittleFingetTip", "Piano", "C2_Do_m4a_1", "C2_Fa_m4a", "C2_La_m4a", "C2_Mi_m4a", "C2_Re_m4a", "C2_So_m4a", "C2_Ti_m4a", "C2_Do_Sharp_m4a", "C2_Fa_Sharp_m4a", "C2_La_Sharp_m4a", "C2_Re_Sharp_m4a", "C2_So_Sharp_m4a", "AudioResources"]
    float2 ui:nodegraph:node:pos = (20, 20)
    int ui:nodegraph:node:stackingOrder = 1
    quatf xformOp:orient = (1, 0, 0, 0)
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Xform "Piano" (
        active = true
    )
    {
        reorder nameChildren = ["C1", "C2", "C3", "Audio"]
        float3 xformOp:scale = (0.7, 0.7, 0.7)
        float3 xformOp:translate = (0, 0.7, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Xform "C1"
        {
            reorder nameChildren = ["C1_Do", "C1_Do_Sharp", "C1_Re", "C1_Re_Sharp", "C1_Mi", "C1_Fa", "C1_Fa_Sharp", "C1_So", "C1_So_Sharp", "C1_La", "C1_La_Sharp", "C1_Ti", "Audio"]
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.384, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Xform "C1_Do" (
                active = true
            )
            {
                reorder nameChildren = ["Key", "Collider", "RealityKitContent_PianoKeyComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.03255534, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Do/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Do/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Do/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Do/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_Do.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_Do_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "RealityKitContent_PianoKeyComponent", "Key", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.012555342, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Do_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Do_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Do_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Do_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_Do_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_Re" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "RealityKitContent_PianoKeyComponent", "Key", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.009444658, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Re/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Re/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Re/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Re/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_Re.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_Re_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "RealityKitContent_PianoKeyComponent", "Key", "Cube_1"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.039444655, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Re_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Re_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Re_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Re_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_Re_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_Mi" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.051444657, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Mi/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Mi/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Mi/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Mi/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_Mi.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_Fa" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.09344466, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Fa/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Fa/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Fa/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Fa/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_Fa.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_Fa_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.113444656, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Fa_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Fa_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Fa_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Fa_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_Fa_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_So" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.13544466, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_So/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_So/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_So/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_So/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_So.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_So_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.16044466, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_So_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_So_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_So_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_So_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_So_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_La" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.17744465, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_La/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_La/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_La/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_La/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_La.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_La_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.20644465, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_La_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_La_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_La_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_La_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_La_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C1_Ti" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.21944466, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Ti/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Ti/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C1/C1_Ti/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C1/C1_Ti/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C1_Ti.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }
        }

        def Xform "C3"
        {
            reorder nameChildren = ["C3_Do_m4a", "C3_Do_Sharp_m4a", "C3_Fa_m4a", "C3_Fa_Sharp_m4a", "C3_La_m4a", "C3_La_Sharp_m4a", "C3_Mi_m4a", "C3_Re_m4a", "C3_Re_Sharp_m4a", "C3_So_m4a", "C3_So_Sharp_m4a", "C3_Ti_m4a", "C3_Do", "C3_Do_Sharp", "C3_Re", "C3_Re_Sharp", "C3_Mi", "C3_Fa", "C3_Fa_Sharp", "C3_So", "C3_So_Sharp", "C3_La", "C3_La_Sharp", "C3_Ti"]
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.204, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Xform "C3_Do" (
                active = true
            )
            {
                reorder nameChildren = ["Key", "RealityKitContent_AudioSourceComponent", "Collider", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.03255534, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Do/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Do/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Do/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Do/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_Do.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_Do_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.012555342, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Do_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Do_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Do_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Do_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_Do_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_Re" (
                active = true
            )
            {
                reorder nameChildren = ["Audio", "Collider", "Key", "RealityKitContent_AudioSourceComponent"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.009444658, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Re/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Re/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Re/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Re/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_Re.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_Re_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.039444655, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Re_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Re_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Re_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Re_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_Re_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_Mi" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.051444657, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Mi/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Mi/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Mi/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Mi/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_Mi.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_Fa" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.09344466, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Fa/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Fa/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Fa/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Fa/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_Fa.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_Fa_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.113444656, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Fa_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Fa_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Fa_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Fa_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_Fa_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_So" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.13544466, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_So/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_So/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_So/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_So/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_So.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_So_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.16044466, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_So_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_So_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_So_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_So_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_So_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_La" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.17744465, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_La/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_La/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_La/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_La/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_La.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_La_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.20644465, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_La_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_La_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_La_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_La_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_La_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C3_Ti" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.21944466, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Ti/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Ti/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C3/C3_Ti/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C3/C3_Ti/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C3_Ti.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }
        }

        def Xform "C2" (
            active = true
        )
        {
            reorder nameChildren = ["C2_Do", "C2_Do_Sharp", "C2_Re", "C2_Re_Sharp", "C2_Mi", "C2_Fa", "C2_Fa_Sharp", "C2_So", "C2_So_Sharp", "C2_La", "C2_La_Sharp", "C2_Ti", "C2_Do_m4a", "C2_Fa_m4a", "C2_La_m4a", "C2_Mi_m4a", "C2_Re_m4a", "C2_So_m4a", "C2_Ti_m4a", "C2_Do_Sharp_m4a", "C2_Fa_Sharp_m4a", "C2_La_Sharp_m4a", "C2_Re_Sharp_m4a", "C2_So_Sharp_m4a"]
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Xform "C2_Do" (
                active = true
            )
            {
                reorder nameChildren = ["Key", "RealityKitContent_AudioSourceComponent", "Collider", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.12279189, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Do/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Do/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Do/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Do/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_Do.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_Do_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.10279189, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Do_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Do_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Do_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Do_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_Do_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_Re" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.08079189, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Re/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Re/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Re/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Re/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_Re.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_Re_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.05079189, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Re_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Re_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Re_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Re_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_Re_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_Mi" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.038791887, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Mi/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Mi/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Mi/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Mi/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_Mi.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_Fa" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.0032081157, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Fa/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Fa/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Fa/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Fa/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_Fa.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_Fa_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.023208112, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Fa_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Fa_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Fa_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Fa_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_Fa_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_So" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.04520811, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_So/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_So/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_So/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_So/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_So.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_So_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.07020812, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_So_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_So_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_So_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_So_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_So_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_La" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.08720811, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_La/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_La/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_La/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_La/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_La.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_La_Sharp" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.11620811, 0.018000007, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.030000001, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.004116133, -0.05, 0.050000012)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    reorder nameChildren = ["Cube", "Cube_1"]
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_La_Sharp/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.1, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.00999999, 0.05)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_La_Sharp/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_La_Sharp/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.15, 0.5, 0.5)
                        float3 xformOp:translate = (-0.004116133, -0.05, 0.050000012)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_La_Sharp/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (0, 0, 0) (
                                    colorSpace = "srgb_texture"
                                )
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_La_Sharp.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }

            def Xform "C2_Ti" (
                active = true
            )
            {
                reorder nameChildren = ["Collider", "Key", "RealityKitContent_AudioSourceComponent", "Audio"]
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.12920812, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (0.040000003, 0.1, 0.099999994)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-5.5879354e-9, -0.05, 0.15)
                        }
                    }
                }

                def Xform "Key" (
                    active = true
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Cube "Cube" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Ti/Key/Cube/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.1, 1)
                        float3 xformOp:translate = (-5.355105e-9, -0.00999999, 0.099999994)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Ti/Key/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }

                    def Cube "Cube_1" (
                        active = false
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        rel material:binding = </Root/Piano/C2/C2_Ti/Key/Cube_1/DefaultMaterial>
                        double size = 0.2
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.2, 0.5, 0.5)
                        float3 xformOp:translate = (-5.355105e-9, -0.05, 0.15)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Material "DefaultMaterial"
                        {
                            token outputs:mtlx:surface
                            token outputs:realitykit:vertex
                            token outputs:surface.connect = </Root/Piano/C2/C2_Ti/Key/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                            def Shader "DefaultSurfaceShader"
                            {
                                uniform token info:id = "UsdPreviewSurface"
                                color3f inputs:diffuseColor = (1, 1, 1)
                                float inputs:roughness = 0.75
                                token outputs:surface
                            }
                        }
                    }
                }

                def RealityKitCustomComponent "RealityKitContent_AudioSourceComponent"
                {
                    uniform token info:id = "RealityKitContent.AudioSourceComponent"
                }

                def RealityKitAudioFile "Audio"
                {
                    uniform asset file = @PianoAudio/C2_Ti.m4a@
                }

                def RealityKitCustomComponent "RealityKitContent_PianoKeyComponent"
                {
                    uniform token info:id = "RealityKitContent.PianoKeyComponent"
                }
            }
        }
    }

    def Xform "LeftThumbTip" (
        active = true
    )
    {
        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/LeftThumbTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/LeftThumbTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "thumbTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "LeftIndexFingetTip" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/LeftIndexFingetTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/LeftIndexFingetTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "indexFingerTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "LeftMiddleFingetTip" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/LeftMiddleFingetTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/LeftMiddleFingetTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "middleFingerTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "LeftRingFingetTip" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/LeftRingFingetTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/LeftRingFingetTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "ringFingerTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "LeftLittleFingetTip" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/LeftLittleFingetTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/LeftLittleFingetTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "littleFingerTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "RightThumbTip" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/RightThumbTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/RightThumbTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            token chirality = "right"
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "thumbTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "RightIndexFingetTip" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/RightIndexFingetTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/RightIndexFingetTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            token chirality = "right"
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "indexFingerTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "RightMiddleFingetTip" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/RightMiddleFingetTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/RightMiddleFingetTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            token chirality = "right"
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "middleFingerTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "RightRingFingetTip" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/RightRingFingetTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/RightRingFingetTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.039999995, 0.039999995, 0.039999995)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            token chirality = "right"
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "ringFingerTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }

    def Xform "RightLittleFingetTip" (
        active = true
    )
    {
        def Sphere "Sphere" (
            active = false
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/RightLittleFingetTip/Sphere/DefaultMaterial>
            double radius = 0.1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.05, 0.05, 0.05)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                prepend token outputs:surface.connect = </Root/RightLittleFingetTip/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Trigger"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.040000003, 0.040000003, 0.040000003)
                float radius = 0.0050000004
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_HandTrackingComponent"
        {
            token chirality = "right"
            uniform token info:id = "RealityKitContent.HandTrackingComponent"
            token jointName = "littleFingerTip"
        }

        def RealityKitCustomComponent "RealityKitContent_AudioTriggerComponent"
        {
            uniform token info:id = "RealityKitContent.AudioTriggerComponent"
        }
    }
}

